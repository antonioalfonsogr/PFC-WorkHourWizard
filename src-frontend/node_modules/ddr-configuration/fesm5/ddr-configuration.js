import { Injectable, ɵɵdefineInjectable, ɵɵinject, Pipe, NgModule } from '@angular/core';
import { HttpClient, HttpClientModule } from '@angular/common/http';
import { has, get, cloneDeep } from 'lodash';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var DdrConfigurationService = /** @class */ (function () {
    function DdrConfigurationService(http) {
        this.http = http;
    }
    /**
     * @param {?} pathJSON
     * @return {?}
     */
    DdrConfigurationService.prototype.getDataFromJSON = /**
     * @param {?} pathJSON
     * @return {?}
     */
    function (pathJSON) {
        var _this = this;
        return new Promise((/**
         * @param {?} resolve
         * @param {?} reject
         * @return {?}
         */
        function (resolve, reject) {
            _this.http.get(pathJSON).subscribe((/**
             * @param {?} data
             * @return {?}
             */
            function (data) {
                _this._data = data;
                resolve(true);
            }), (/**
             * @param {?} error
             * @return {?}
             */
            function (error) {
                console.error("Ddr-Conf: ", error);
                reject(true);
            }));
        }));
    };
    /**
     * @param {?} path
     * @return {?}
     */
    DdrConfigurationService.prototype.getData = /**
     * @param {?} path
     * @return {?}
     */
    function (path) {
        if (!has(this._data, path)) {
            console.error("Not exists path: " + path);
            return null;
        }
        else {
            return get(this._data, path);
        }
    };
    /**
     * @return {?}
     */
    DdrConfigurationService.prototype.getAllData = /**
     * @return {?}
     */
    function () {
        return cloneDeep(this._data);
    };
    DdrConfigurationService.decorators = [
        { type: Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    /** @nocollapse */
    DdrConfigurationService.ctorParameters = function () { return [
        { type: HttpClient }
    ]; };
    /** @nocollapse */ DdrConfigurationService.ngInjectableDef = ɵɵdefineInjectable({ factory: function DdrConfigurationService_Factory() { return new DdrConfigurationService(ɵɵinject(HttpClient)); }, token: DdrConfigurationService, providedIn: "root" });
    return DdrConfigurationService;
}());
if (false) {
    /**
     * @type {?}
     * @private
     */
    DdrConfigurationService.prototype._data;
    /**
     * @type {?}
     * @private
     */
    DdrConfigurationService.prototype.http;
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var GetDataConfPipe = /** @class */ (function () {
    function GetDataConfPipe(ddrConfiguration) {
        this.ddrConfiguration = ddrConfiguration;
    }
    /**
     * @param {?} path
     * @return {?}
     */
    GetDataConfPipe.prototype.transform = /**
     * @param {?} path
     * @return {?}
     */
    function (path) {
        return this.ddrConfiguration.getData(path);
    };
    GetDataConfPipe.decorators = [
        { type: Pipe, args: [{
                    name: 'getDataConf'
                },] }
    ];
    /** @nocollapse */
    GetDataConfPipe.ctorParameters = function () { return [
        { type: DdrConfigurationService }
    ]; };
    return GetDataConfPipe;
}());
if (false) {
    /**
     * @type {?}
     * @private
     */
    GetDataConfPipe.prototype.ddrConfiguration;
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var DdrConfigurationModule = /** @class */ (function () {
    function DdrConfigurationModule() {
    }
    DdrConfigurationModule.decorators = [
        { type: NgModule, args: [{
                    declarations: [
                        GetDataConfPipe
                    ],
                    imports: [
                        HttpClientModule
                    ],
                    exports: [GetDataConfPipe]
                },] }
    ];
    return DdrConfigurationModule;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

export { DdrConfigurationModule, DdrConfigurationService, GetDataConfPipe as ɵa };
//# sourceMappingURL=ddr-configuration.js.map
