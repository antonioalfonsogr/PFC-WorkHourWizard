{"version":3,"file":"ddr-configuration.js","sources":["ddr-configuration/lib/ddr-configuration.service.ts","ddr-configuration/lib/get-data-conf.pipe.ts","ddr-configuration/lib/ddr-configuration.module.ts"],"names":["_.has","_.get","_.cloneDeep"],"mappings":";;;;;;;;;;AAAA,MAOa,uBAAuB;AAEpC;AAAS;AAEC;AAAS,IAAjB,YAAoB,IAAgB;AAAK,QAArB,SAAI,GAAJ,IAAI,CAAY;AAAE,KAAG;AAE3C;AAAS;AAA4B;AAClB;AAAS,IAD1B,eAAe,CAAC,QAAgB;AACjC,QAAG,OAAO,IAAI,OAAO;AAAO;AACf;AAA8B;AAC1B;AACd,QAHmB,CAAC,OAAO,EAAE,MAAM;AACtC,YAAK,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,SAAS;AAAO;AAE7C;AACK;AACH,YAJqC,IAAI;AAC3C,gBAAO,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;AACzB,gBAAO,OAAO,CAAC,IAAI,CAAC,CAAC;AACrB,aAAM;AAAS;AACa;AAChB;AACL,YAHC,KAAK;AACb,gBAAO,OAAO,CAAC,KAAK,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC;AAC1C,gBAAO,MAAM,CAAC,IAAI,CAAC,CAAC;AACpB,aAAM,EAAC,CAAA;AACP,SAAI,EAAC,CAAA;AACL,KAAE;AAEH;AAAS;AACF;AAAoB;AAC3B,IAFE,OAAO,CAAC,IAAY;AACrB,QAAG,IAAI,CAACA,GAAK,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,EAAE;AACjC,YAAK,OAAO,CAAC,KAAK,CAAC,mBAAmB,GAAG,IAAI,CAAC,CAAC;AAC/C,YAAK,OAAO,IAAI,CAAC;AACjB,SAAI;AAAE,aAAI;AACV,YAAK,OAAOC,GAAK,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;AACpC,SAAI;AACJ,KAAE;AAEH;AAAS;AACG;AAAS,IADnB,UAAU;AACX,QAAG,OAAOC,SAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAClC,KAAE;AAEH;qDAlCC,UAAU,SAAC,mBACV,UAAU,EAAE,MAAM,eACnB;uKACK;AAAE;AAAoB;AAIb,YAVN,UAAU;AAAI;AAAI;;;;;;2EAad;AAAE;AAAc;AAAS;AAC5B;AAAiB;AAAS,IANlC,wCAAmB;AAErB;AAAS;AAAkB;AAC3B;AACQ,IAFM,uCAAwB;AAAE;AAAE;AAAC;AAExC;AACH;AAGY;ACjBZ,MAMa,eAAe;AAAI;AAAS;AAErB;AAAS,IAA3B,YAAoB,gBAAyC;AAC/D,QADsB,qBAAgB,GAAhB,gBAAgB,CAAyB;AAAE,KAAE;AAEnE;AAAS;AACT;AAAoB;AAAS,IAD3B,SAAS,CAAC,IAAY;AAAK,QACzB,OAAO,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AAC9C,KAAE;AAEH;6CAXC,IAAI,SAAC,mBACJ,IAAI,EAAE,aAAa,eACpB;sHACK;AAAE;AAAoB;AAEf,YAPJ,uBAAuB;AAAI;;;;;;iFAAE;AAAE;AAAc;AAAS;AAG9D;AAAiB;AAEhB,IAEY,2CAAiD;AAAE;AAAE;AACnE;AACI;AACE;AAIgF;ACftF,MAea,sBAAsB;AAAI;oDATtC,QAAQ,SAAC,mBACR,YAAY,EAAE;GACZ,eAAe,mBAChB,mBACD,OAAO,EAAE,uBACP;CAAgB,mBACjB,mBACD,OAAO,EAAE,CAAC,eAAe,CAAC,eAC3B;;;;;;;;;;;;;gSACK;AAAC;AAAC;AAAK;AACL;AAAuI;AAAI;AAAC;AAAK;AAAmC;AAAuI;AAAI;AAAC;AAAmF","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport * as _ from 'lodash';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DdrConfigurationService {\n\n  private _data: any;\n\n  constructor(private http: HttpClient) { }\n\n  getDataFromJSON(pathJSON: string) {\n    return new Promise((resolve, reject) => {\n      this.http.get(pathJSON).subscribe(data => {\n        this._data = data;\n        resolve(true);\n      }, error => {\n        console.error(\"Ddr-Conf: \", error);\n        reject(true);\n      })\n    })\n  }\n\n  getData(path: string) {\n    if (!_.has(this._data, path)) {\n      console.error(\"Not exists path: \" + path);\n      return null;\n    } else {\n      return _.get(this._data, path);\n    }\n  }\n\n  getAllData() {\n    return _.cloneDeep(this._data);\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DdrConfigurationService } from './ddr-configuration.service';\n\n@Pipe({\n  name: 'getDataConf'\n})\nexport class GetDataConfPipe implements PipeTransform {\n\n  constructor(private ddrConfiguration: DdrConfigurationService){ }\n\n  transform(path: string): any {\n    return this.ddrConfiguration.getData(path);\n  }\n\n}\n","import { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { GetDataConfPipe } from './get-data-conf.pipe';\n\n\n\n@NgModule({\n  declarations: [\n    GetDataConfPipe\n  ],\n  imports: [\n    HttpClientModule\n  ],\n  exports: [GetDataConfPipe]\n})\nexport class DdrConfigurationModule { }\n"]}