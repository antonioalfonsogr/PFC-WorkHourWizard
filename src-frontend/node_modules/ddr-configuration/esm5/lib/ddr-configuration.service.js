/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import * as _ from 'lodash';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common/http";
var DdrConfigurationService = /** @class */ (function () {
    function DdrConfigurationService(http) {
        this.http = http;
    }
    /**
     * @param {?} pathJSON
     * @return {?}
     */
    DdrConfigurationService.prototype.getDataFromJSON = /**
     * @param {?} pathJSON
     * @return {?}
     */
    function (pathJSON) {
        var _this = this;
        return new Promise((/**
         * @param {?} resolve
         * @param {?} reject
         * @return {?}
         */
        function (resolve, reject) {
            _this.http.get(pathJSON).subscribe((/**
             * @param {?} data
             * @return {?}
             */
            function (data) {
                _this._data = data;
                resolve(true);
            }), (/**
             * @param {?} error
             * @return {?}
             */
            function (error) {
                console.error("Ddr-Conf: ", error);
                reject(true);
            }));
        }));
    };
    /**
     * @param {?} path
     * @return {?}
     */
    DdrConfigurationService.prototype.getData = /**
     * @param {?} path
     * @return {?}
     */
    function (path) {
        if (!_.has(this._data, path)) {
            console.error("Not exists path: " + path);
            return null;
        }
        else {
            return _.get(this._data, path);
        }
    };
    /**
     * @return {?}
     */
    DdrConfigurationService.prototype.getAllData = /**
     * @return {?}
     */
    function () {
        return _.cloneDeep(this._data);
    };
    DdrConfigurationService.decorators = [
        { type: Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    /** @nocollapse */
    DdrConfigurationService.ctorParameters = function () { return [
        { type: HttpClient }
    ]; };
    /** @nocollapse */ DdrConfigurationService.ngInjectableDef = i0.ɵɵdefineInjectable({ factory: function DdrConfigurationService_Factory() { return new DdrConfigurationService(i0.ɵɵinject(i1.HttpClient)); }, token: DdrConfigurationService, providedIn: "root" });
    return DdrConfigurationService;
}());
export { DdrConfigurationService };
if (false) {
    /**
     * @type {?}
     * @private
     */
    DdrConfigurationService.prototype._data;
    /**
     * @type {?}
     * @private
     */
    DdrConfigurationService.prototype.http;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGRyLWNvbmZpZ3VyYXRpb24uc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2Rkci1jb25maWd1cmF0aW9uLyIsInNvdXJjZXMiOlsibGliL2Rkci1jb25maWd1cmF0aW9uLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQ2xELE9BQU8sS0FBSyxDQUFDLE1BQU0sUUFBUSxDQUFDOzs7QUFFNUI7SUFPRSxpQ0FBb0IsSUFBZ0I7UUFBaEIsU0FBSSxHQUFKLElBQUksQ0FBWTtJQUFJLENBQUM7Ozs7O0lBRXpDLGlEQUFlOzs7O0lBQWYsVUFBZ0IsUUFBZ0I7UUFBaEMsaUJBVUM7UUFUQyxPQUFPLElBQUksT0FBTzs7Ozs7UUFBQyxVQUFDLE9BQU8sRUFBRSxNQUFNO1lBQ2pDLEtBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxDQUFDLFNBQVM7Ozs7WUFBQyxVQUFBLElBQUk7Z0JBQ3BDLEtBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDO2dCQUNsQixPQUFPLENBQUMsSUFBSSxDQUFDLENBQUM7WUFDaEIsQ0FBQzs7OztZQUFFLFVBQUEsS0FBSztnQkFDTixPQUFPLENBQUMsS0FBSyxDQUFDLFlBQVksRUFBRSxLQUFLLENBQUMsQ0FBQztnQkFDbkMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDO1lBQ2YsQ0FBQyxFQUFDLENBQUE7UUFDSixDQUFDLEVBQUMsQ0FBQTtJQUNKLENBQUM7Ozs7O0lBRUQseUNBQU87Ozs7SUFBUCxVQUFRLElBQVk7UUFDbEIsSUFBSSxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLEtBQUssRUFBRSxJQUFJLENBQUMsRUFBRTtZQUM1QixPQUFPLENBQUMsS0FBSyxDQUFDLG1CQUFtQixHQUFHLElBQUksQ0FBQyxDQUFDO1lBQzFDLE9BQU8sSUFBSSxDQUFDO1NBQ2I7YUFBTTtZQUNMLE9BQU8sQ0FBQyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxDQUFDO1NBQ2hDO0lBQ0gsQ0FBQzs7OztJQUVELDRDQUFVOzs7SUFBVjtRQUNFLE9BQU8sQ0FBQyxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDakMsQ0FBQzs7Z0JBaENGLFVBQVUsU0FBQztvQkFDVixVQUFVLEVBQUUsTUFBTTtpQkFDbkI7Ozs7Z0JBTFEsVUFBVTs7O2tDQURuQjtDQXNDQyxBQWxDRCxJQWtDQztTQS9CWSx1QkFBdUI7Ozs7OztJQUVsQyx3Q0FBbUI7Ozs7O0lBRVAsdUNBQXdCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgSHR0cENsaWVudCB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbi9odHRwJztcbmltcG9ydCAqIGFzIF8gZnJvbSAnbG9kYXNoJztcblxuQEluamVjdGFibGUoe1xuICBwcm92aWRlZEluOiAncm9vdCdcbn0pXG5leHBvcnQgY2xhc3MgRGRyQ29uZmlndXJhdGlvblNlcnZpY2Uge1xuXG4gIHByaXZhdGUgX2RhdGE6IGFueTtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGh0dHA6IEh0dHBDbGllbnQpIHsgfVxuXG4gIGdldERhdGFGcm9tSlNPTihwYXRoSlNPTjogc3RyaW5nKSB7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgIHRoaXMuaHR0cC5nZXQocGF0aEpTT04pLnN1YnNjcmliZShkYXRhID0+IHtcbiAgICAgICAgdGhpcy5fZGF0YSA9IGRhdGE7XG4gICAgICAgIHJlc29sdmUodHJ1ZSk7XG4gICAgICB9LCBlcnJvciA9PiB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoXCJEZHItQ29uZjogXCIsIGVycm9yKTtcbiAgICAgICAgcmVqZWN0KHRydWUpO1xuICAgICAgfSlcbiAgICB9KVxuICB9XG5cbiAgZ2V0RGF0YShwYXRoOiBzdHJpbmcpIHtcbiAgICBpZiAoIV8uaGFzKHRoaXMuX2RhdGEsIHBhdGgpKSB7XG4gICAgICBjb25zb2xlLmVycm9yKFwiTm90IGV4aXN0cyBwYXRoOiBcIiArIHBhdGgpO1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBfLmdldCh0aGlzLl9kYXRhLCBwYXRoKTtcbiAgICB9XG4gIH1cblxuICBnZXRBbGxEYXRhKCkge1xuICAgIHJldHVybiBfLmNsb25lRGVlcCh0aGlzLl9kYXRhKTtcbiAgfVxuXG59XG4iXX0=