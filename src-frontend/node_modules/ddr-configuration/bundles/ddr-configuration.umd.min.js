!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/core"),require("@angular/common/http"),require("lodash")):"function"==typeof define&&define.amd?define("ddr-configuration",["exports","@angular/core","@angular/common/http","lodash"],e):e((t=t||self)["ddr-configuration"]={},t.ng.core,t.ng.common.http,t.lodash)}(this,(function(t,e,n,o){"use strict";var r=function(){function t(t){this.http=t}return t.prototype.getDataFromJSON=function(t){var e=this;return new Promise((function(n,o){e.http.get(t).subscribe((function(t){e._data=t,n(!0)}),(function(t){console.error("Ddr-Conf: ",t),o(!0)}))}))},t.prototype.getData=function(t){return o.has(this._data,t)?o.get(this._data,t):(console.error("Not exists path: "+t),null)},t.prototype.getAllData=function(){return o.cloneDeep(this._data)},t.decorators=[{type:e.Injectable,args:[{providedIn:"root"}]}],t.ctorParameters=function(){return[{type:n.HttpClient}]},t.ngInjectableDef=e.ɵɵdefineInjectable({factory:function(){return new t(e.ɵɵinject(n.HttpClient))},token:t,providedIn:"root"}),t}();var a=function(){function t(t){this.ddrConfiguration=t}return t.prototype.transform=function(t){return this.ddrConfiguration.getData(t)},t.decorators=[{type:e.Pipe,args:[{name:"getDataConf"}]}],t.ctorParameters=function(){return[{type:r}]},t}();var i=function(){function t(){}return t.decorators=[{type:e.NgModule,args:[{declarations:[a],imports:[n.HttpClientModule],exports:[a]}]}],t}();t.DdrConfigurationModule=i,t.DdrConfigurationService=r,t.ɵa=a,Object.defineProperty(t,"__esModule",{value:!0})}));
//# sourceMappingURL=ddr-configuration.umd.min.js.map