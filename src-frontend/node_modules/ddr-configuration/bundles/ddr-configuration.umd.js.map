{"version":3,"file":"ddr-configuration.umd.js","sources":["ng://ddr-configuration/lib/ddr-configuration.service.ts","ng://ddr-configuration/lib/get-data-conf.pipe.ts","ng://ddr-configuration/lib/ddr-configuration.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport * as _ from 'lodash';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DdrConfigurationService {\n\n  private _data: any;\n\n  constructor(private http: HttpClient) { }\n\n  getDataFromJSON(pathJSON: string) {\n    return new Promise((resolve, reject) => {\n      this.http.get(pathJSON).subscribe(data => {\n        this._data = data;\n        resolve(true);\n      }, error => {\n        console.error(\"Ddr-Conf: \", error);\n        reject(true);\n      })\n    })\n  }\n\n  getData(path: string) {\n    if (!_.has(this._data, path)) {\n      console.error(\"Not exists path: \" + path);\n      return null;\n    } else {\n      return _.get(this._data, path);\n    }\n  }\n\n  getAllData() {\n    return _.cloneDeep(this._data);\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DdrConfigurationService } from './ddr-configuration.service';\n\n@Pipe({\n  name: 'getDataConf'\n})\nexport class GetDataConfPipe implements PipeTransform {\n\n  constructor(private ddrConfiguration: DdrConfigurationService){ }\n\n  transform(path: string): any {\n    return this.ddrConfiguration.getData(path);\n  }\n\n}\n","import { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { GetDataConfPipe } from './get-data-conf.pipe';\n\n\n\n@NgModule({\n  declarations: [\n    GetDataConfPipe\n  ],\n  imports: [\n    HttpClientModule\n  ],\n  exports: [GetDataConfPipe]\n})\nexport class DdrConfigurationModule { }\n"],"names":["_.has","_.get","_.cloneDeep","Injectable","HttpClient","Pipe","NgModule","HttpClientModule"],"mappings":";;;;;;;;;;AAAA;QAWE,iCAAoB,IAAgB;YAAhB,SAAI,GAAJ,IAAI,CAAY;SAAK;;;;;QAEzC,iDAAe;;;;QAAf,UAAgB,QAAgB;YAAhC,iBAUC;YATC,OAAO,IAAI,OAAO;;;;;YAAC,UAAC,OAAO,EAAE,MAAM;gBACjC,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,SAAS;;;;gBAAC,UAAA,IAAI;oBACpC,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC;oBAClB,OAAO,CAAC,IAAI,CAAC,CAAC;iBACf;;;;gBAAE,UAAA,KAAK;oBACN,OAAO,CAAC,KAAK,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC;oBACnC,MAAM,CAAC,IAAI,CAAC,CAAC;iBACd,EAAC,CAAA;aACH,EAAC,CAAA;SACH;;;;;QAED,yCAAO;;;;QAAP,UAAQ,IAAY;YAClB,IAAI,CAACA,UAAK,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,EAAE;gBAC5B,OAAO,CAAC,KAAK,CAAC,mBAAmB,GAAG,IAAI,CAAC,CAAC;gBAC1C,OAAO,IAAI,CAAC;aACb;iBAAM;gBACL,OAAOC,UAAK,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;aAChC;SACF;;;;QAED,4CAAU;;;QAAV;YACE,OAAOC,gBAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SAChC;;oBAhCFC,eAAU,SAAC;wBACV,UAAU,EAAE,MAAM;qBACnB;;;;oBALQC,eAAU;;;sCADnB;KAIA,IAkCC;;;;;;QA7BC,wCAAmB;;;;;QAEP,uCAAwB;;;;;;;ACXtC;QAQE,yBAAoB,gBAAyC;YAAzC,qBAAgB,GAAhB,gBAAgB,CAAyB;SAAI;;;;;QAEjE,mCAAS;;;;QAAT,UAAU,IAAY;YACpB,OAAO,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;SAC5C;;oBATFC,SAAI,SAAC;wBACJ,IAAI,EAAE,aAAa;qBACpB;;;;oBAJQ,uBAAuB;;QAahC,sBAAC;KAXD,IAWC;;;;;;QANa,2CAAiD;;;;;;;ACR/D;QAMA;SASuC;;oBATtCC,aAAQ,SAAC;wBACR,YAAY,EAAE;4BACZ,eAAe;yBAChB;wBACD,OAAO,EAAE;4BACPC,qBAAgB;yBACjB;wBACD,OAAO,EAAE,CAAC,eAAe,CAAC;qBAC3B;;QACqC,6BAAC;KATvC;;;;;;;;;;;;;;"}